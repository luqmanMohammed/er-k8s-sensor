name: ci
on:
  pull_request:
    branches: [develop, main]

env:
  go_version: "1.23"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Build
        run: go build -v .

  prepare-test-envs:
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.latest.outputs.LATEST_ENV }}
    steps:
      - run: export LATEST=$(curl https://api.github.com/repos/k3s-io/k3s/releases/latest | jq -r '.name'); echo "LATEST_ENV=$( echo $LATEST | sed "s/+/-/")" >> $GITHUB_OUTPUT
        id: latest

  unit-tests:
    runs-on: ubuntu-latest
    needs:
      - build
      - prepare-test-envs
    strategy:
      matrix:
        k3s_k8s_image:
          - ${{ needs.prepare-test-envs.outputs.latest }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
      - run: k3d cluster create cluster --agents 1 --image "rancher/k3s:${{ matrix.k3s_k8s_image }}"
      - name: Run tests
        run: go test -v ./... -coverprofile coverage.out
      - name: Codecov
        uses: codecov/codecov-action@v2.1.0
        if: ${{ matrix.k3s_k8s_image == needs.prepare-test-envs.outputs.latest }}
        with:
          files: coverage.out
          fail_ci_if_error: true

  integration-tests:
    runs-on: ubuntu-latest
    permissions:
      security-events: read
      contents: read
    needs:
      - prepare-test-envs
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker Image
        run: DOCKER_BUILDKIT=1 docker build -f Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/eventsrunner-k8s-sensor:${{ github.sha }} .
      - name: Scan Docker Image using Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "image"
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/eventsrunner-k8s-sensor:${{ github.sha }}
          exit-code: 1
          severity: "MEDIUM,HIGH,CRITICAL"
      - run: curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
      - run: k3d cluster create cluster --agents 1 --image "rancher/k3s:${{ needs.prepare-test-envs.outputs.latest }}"
      - name: Upload Docker Image to K8s Cluster
        run: k3d image import -c cluster ${{ secrets.DOCKERHUB_USERNAME }}/eventsrunner-k8s-sensor:${{ github.sha }}
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Run Integration Tests
        run: IMAGE_TAG=${{ github.sha }} INT_TEST="true" go test -v ./integration-tests/...
