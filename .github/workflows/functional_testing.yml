name: Build and Test
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  go_version: 1.17

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go_version }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: go build ./...

  analyze:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'dependencies') }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go_version }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: go
      - name: Build
        run: go build ./...
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  test_with_k8s:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k3s_k8s_image:
          - rancher/k3s:v1.23.3-k3s1
          - rancher/k3s:v1.22.6-k3s1
          - rancher/k3s:v1.21.9-k3s1
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go_version }}
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Create Simple K8s Cluster
        uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: cluster
          args: >-
            --image=${{ matrix.k3s_k8s_image }}
      - name: Run tests
        run: go test ./...
