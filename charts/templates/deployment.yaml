apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "eventsrunner-k8s-sensor.fullname" . }}
  labels:
    {{- include "eventsrunner-k8s-sensor.labels" . | nindent 4 }}
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: 1 # Make configurable after lease based HA is added
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "eventsrunner-k8s-sensor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "eventsrunner-k8s-sensor.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "eventsrunner-k8s-sensor.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/er-k8s-sensor/
              name: config
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: {{ include "eventsrunner-k8s-sensor.fullname" $ }}
            items:
              - key: config.yaml
                path: config.yaml
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
